(function () {let exports={};"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.inject = inject;
// site.ts

var style = function style(config) {
  return "\n\n    .list-container {\n        flex: 1;\n        flex-direction: row;\n        overflow-y: auto;\n    }\n\n    .info {\n        flex: 2;\n    }\n\n    .list-item {\n        padding: 15px 30px;\n        height: 35%;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n        border-bottom: 1px solid #00000026;\n\n        .list-item-name {\n            font-size: 18px;\n        }\n\n        .list-item-description {\n            font-size: 14px;\n        }\n\n        .list-item-documentation-link {\n            margin-top: 15px;\n\n            .label {\n                text-decoration: none;\n            }\n        }\n    }\n\n    .list-content {\n        margin-right: 20px;\n    }\n\n    .beta-feature-button {\n        position: fixed;\n        bottom: 20px;\n        right: 20px;\n        font-weight: normal;\n        font-family: -apple-system, BlinkMacSystemFont, \"Inter\", \"Segoe UI\", \"Roboto\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n        text-align: left;\n        z-index: ".concat(parseInt(config.zIndex) || 99999, ";\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .top-section {\n        padding: 15px 30px;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n        border-bottom: 1px solid #00000026;\n    }\n\n    .beta-list-cancel {\n        cursor: pointer;\n    }\n\n    .title {\n        font-size: 16px;\n        font-weight: bold;\n    }\n\n    .popup {\n        position: fixed;\n        top: 50%;\n        left: 50%;\n        color: black;\n        transform: translate(-50%, -50%);\n        font-weight: normal;\n        font-family: -apple-system, BlinkMacSystemFont, \"Inter\", \"Segoe UI\", \"Roboto\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n        text-align: left;\n        z-index: ").concat(parseInt(config.zIndex) || 99999, ";\n\n        display: none;\n        flex-direction: column;\n        background: white;\n        border: 1px solid #f0f0f0;\n        border-radius: 8px;\n        padding-top: 5px;\n        width: 40rem;\n        height: 50%;\n        box-shadow: -6px 0 16px -8px rgb(0 0 0 / 8%), -9px 0 28px 0 rgb(0 0 0 / 5%), -12px 0 48px 16px rgb(0 0 0 / 3%);\n    }\n\n    .beta-feature-button {\n        width: 64px;\n        height: 64px;\n        border-radius: 100%;\n        text-align: center;\n        line-height: 60px;\n        font-size: 32px;\n        border: none;\n        cursor: pointer;\n    }\n    .beta-feature-button:hover {\n        filter: brightness(1.2);\n    }\n\n    .empty-prompt {\n        flex: 1;\n        text-align: center;\n        margin-top: 20px;\n    }\n\n\n\n    /* The switch - the box around the slider */\n    .switch {\n        margin-left: 10px;\n        margin-right: 10px;\n        position: relative;\n        display: inline-block;\n        min-width: 50px;\n        height: 24px;\n    }\n\n    /* Hide default HTML checkbox */\n    .switch input {\n        opacity: 0;\n        width: 0;\n        height: 0;\n    }\n\n    /* The slider */\n    .slider {\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: #00000026;\n        -webkit-transition: .4s;\n        transition: background-color .4s;\n        cursor: pointer;\n    }\n\n    .slider:before {\n        position: absolute;\n        content: \"\";\n        height: 20px;\n        width: 20px;\n        left: -10px;\n        bottom: -6px;\n        background-color: #ffffff;\n        -webkit-transition: .2s;\n        transition: .2s;\n        border: 2px solid #00000026;\n    }\n\n    input:checked + .slider {\n        background-color: #00000026;\n    }\n\n    input:focus + .slider {\n        box-shadow: 0 0 1px #00000026;\n    }\n\n    input:checked + .slider:before {\n        -webkit-transform: translateX(26px);\n        -ms-transform: translateX(26px);\n        transform: translateX(26px);\n        background-color: #1d4aff;\n    }\n\n    /* Rounded sliders */\n    .slider.round {\n        border-radius: 20px;\n        height: 10px;\n        width: 30px;\n        background-color: #00000026;\n    }\n\n    .slider.round:before {\n        border-radius: 50%;\n    }\n\n    .loader-container {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 50%;\n        width: 100%;\n    }\n\n    .loader {\n        border: 8px solid #00000026; /* Light grey */\n        border-top: 8px solid #1d4aff; /* Blue */\n        border-radius: 50%;\n        width: 60px;\n        height: 60px;\n        animation: spin 2s linear infinite;\n    }\n      \n    @keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n    }\n");
};
function inject(_ref) {
  var config = _ref.config,
    posthog = _ref.posthog;
  if (config.domains) {
    var domains = config.domains.split(',').map(function (domain) {
      return domain.trim();
    });
    if (domains.length > 0 && domains.indexOf(window.location.hostname) === -1) {
      return;
    }
  }
  var shadow = createShadow(style(config));
  function optIn(flagKey) {
    posthog.updateEarlyAccessFeatureEnrollment(flagKey, true);
  }
  function optOut(flagKey) {
    posthog.updateEarlyAccessFeatureEnrollment(flagKey, false);
  }
  function openbugBox() {
    posthog.getEarlyAccessFeatures(function (previewItemData) {
      var betaListContainer = shadow.getElementById('list-container');
      if (betaListContainer) {
        var previewItems = listItemComponents(previewItemData);
        var previewList = previewItems ? "\n                    <div class=\"list\">\n                        ".concat(previewItems, "\n                    </div>\n                ") : "\n                    <div class=\"empty-prompt\">\n                        No beta features available\n                    </div>\n                ";
        betaListContainer.innerHTML = previewList;
        previewItemData.forEach(function (item, index) {
          var checkbox = shadow.querySelector('.checkbox-' + index);
          checkbox === null || checkbox === void 0 ? void 0 : checkbox.addEventListener('click', function (e) {
            var _e$target;
            if ((_e$target = e.target) !== null && _e$target !== void 0 && _e$target.checked) {
              optIn(item.flagKey);
            } else {
              optOut(item.flagKey);
            }
          });
        });
      }
    }, true); // Force reload always

    Object.assign(listElement.style, {
      display: 'flex'
    });
    var closeButton = shadow.querySelector('.beta-list-cancel');
    closeButton === null || closeButton === void 0 ? void 0 : closeButton.addEventListener('click', function (e) {
      e.preventDefault();
      Object.assign(listElement.style, {
        display: 'none'
      });
    });

    // // Hide when clicked outside
    // const _betaList = document.getElementById('beta-list')
    // document.addEventListener('click', function(event) {
    //     const isClickInside = _betaList?.contains(event.target)

    //     if (!isClickInside) {
    //         // Object.assign(formElement.style, { display: 'none' })
    //     }
    // });
  }

  // TODO: Make this button a config option
  var buttonElement = Object.assign(document.createElement('button'), {
    className: 'beta-feature-button',
    onclick: openbugBox,
    title: config.buttonTitle || ''
  });
  buttonElement.innerHTML = "\n        <svg viewBox=\"0 0 100 80\" width=\"30\" height=\"30\">\n            <rect width=\"100\" height=\"10\" fill=\"white\"></rect>\n            <rect y=\"30\" width=\"100\" height=\"10\" fill=\"white\"></rect>\n            <rect y=\"60\" width=\"100\" height=\"10\" fill=\"white\"></rect>\n        </svg>\n    ";
  Object.assign(buttonElement.style, {
    color: config.buttonColor || 'white',
    background: config.buttonBackground || '#1d4aff'
  });
  if (config.useButton === 'Yes') {
    shadow.appendChild(buttonElement);
  }
  var CloseButtonComponent = function CloseButtonComponent(width, height) {
    return "\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"".concat(width, "\" height=\"").concat(height, "\" fill=\"currentColor\" class=\"bi bi-x\" viewBox=\"0 0 16 16\">\n            <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\n        </svg>\n    ");
  };
  var BetaListComponent = "\n        <div class='top-section'>\n            <div class='title'>Enable beta features</div>\n            <div class='beta-list-cancel'>\n                ".concat(CloseButtonComponent(30, 30), "\n            </div>\n        </div>\n        <div id=\"list-container\" class=\"list-container\">\n            <div class=\"loader-container\">\n                <div class=\"loader\"></div>\n            </div>\n        </div>\n    ");
  var betaListElement = document.createElement('div');
  betaListElement.id = 'beta-list';
  var listElement = Object.assign(betaListElement, {
    className: 'popup',
    innerHTML: BetaListComponent
  });
  shadow.appendChild(listElement);
  if (config.selector) {
    var clickListener = function clickListener(e) {
      if (e.target.closest(config.selector)) {
        openbugBox();
      }
    };
    window.addEventListener('click', clickListener);
  }
  var listItemComponents = function listItemComponents(items) {
    if (items) {
      return items.map(function (item, index) {
        var checked = posthog.isFeatureEnabled(item.flagKey);
        var documentationLink = item.documentationUrl ? "<div class='list-item-documentation-link'>\n                        <a class='label' href='".concat(item.documentationUrl, "' target='_blank'>Documentation</a>\n                    </div>\n                    ") : '';
        return "\n                        <div class='list-item' data-name='".concat(item.name, "'>\n                            <div class='list-content'>\n                                <b class='list-item-name'>").concat(item.name, "</b>\n                                <div class='list-item-description'>").concat(item.description, "</div>\n                                ").concat(documentationLink, "\n                            </div>\n                            <label class=\"switch\">\n                                <input class='checkbox-").concat(index, "' type=\"checkbox\" ").concat(checked ? 'checked' : '', ">\n                                <span class=\"slider round\"></span>\n                            </label>\n                        </div>\n                    ");
      }).join('');
    }
    return '';
  };
}
function createShadow(style) {
  var div = document.createElement('div');
  var shadow = div.attachShadow({
    mode: 'open'
  });
  if (style) {
    var styleElement = Object.assign(document.createElement('style'), {
      innerText: style
    });
    shadow.appendChild(styleElement);
  }
  document.body.appendChild(div);
  return shadow;
};return exports;})().inject({config:{"selector": "[data-posthog=\"early-access\"]", "useButton": "No"},posthog:window['__$$ph_site_app_59652']})